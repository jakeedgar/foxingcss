@use "sass:math";

$flex-grid-columns: 12;
$flex-grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout classes
.container-flex {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row-flex {
  display: flex;
  flex-flow: row wrap;

}

// flex-grid gaps

@each $key, $value in $flex-grid-gaps {
  .gap-#{$key} > * {
    padding: $value;
  }
  .gap-#{$key} {
    margin-left: -$value;
    margin-right: -$value;
  }
}

//justify content classes
@each $value in $layout-values {
  .justify-#{$value} {
    justify-content: $value;
  }
}

// column classes
@include xs {
  @for $i from 1 through $flex-grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $flex-grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $flex-grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $flex-grid-columns);
    }
  }
}

@include md {
  @for $i from 1 through $flex-grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $flex-grid-columns);
    }
  }
}

@include lg {
  @for $i from 1 through $flex-grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $flex-grid-columns);
    }
  }
}

@include xl {
  @for $i from 1 through $flex-grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $flex-grid-columns);
    }
  }
}